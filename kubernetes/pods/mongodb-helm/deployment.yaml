apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    release: mongodb
  name: mongodb
  namespace: mongodb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
      release: mongodb
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/path: '/metrics'
        prometheus.io/scrape: "true"
        prometheus.io/port: "9001"
      labels:
        app: mongodb
        release: mongodb
    spec:
      containers:
      - env:
        - name: MONGODB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mongodb-root-password
              name: mongodb
        - name: MONGODB_USERNAME
        - name: MONGODB_DATABASE
        - name: MONGODB_EXTRA_FLAGS
        image: docker.io/bitnami/mongodb:3.6.5
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - mongo
            - --eval
            - db.adminCommand('ping')
          failureThreshold: 6
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: mongodb
        ports:
        - containerPort: 27017
          name: mongodb
          protocol: TCP
        lifecycle:
          postStart:
            exec:
              command:
                - "sh"
                - "-c"
                - >
                  apt update && apt-get install --yes wget;
                  wget https://github.com/dcu/mongodb_exporter/releases/download/v1.0.0/mongodb_exporter-linux-amd64;
                  chmod +x mongodb_exporter-linux-amd64;
                  nohup ./mongodb_exporter-linux-amd64 > nohup.out 2> nohup.err < /dev/null &
        readinessProbe:
          exec:
            command:
            - mongo
            - --eval
            - db.adminCommand('ping')
          failureThreshold: 6
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
#        volumeMounts:
#        - mountPath: /bitnami/mongodb
#          name: data
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
#      volumes:
#      - name: data
#        persistentVolumeClaim:
#          claimName: mongodb
